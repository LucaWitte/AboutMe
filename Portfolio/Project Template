<!DOCTYPE html>
<html lang="en">
   <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="description" content="Automated Cell Culture System - Project by Luca">
      <title>Automated Cell Culture System - Luca</title>
      <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap" rel="stylesheet">
      <link rel="stylesheet" href="../style.css">

   </head>
   <body>
      <header>
         <h1>Automated Cell Culture System</h1>
      </header>

      <button class="sidebar-toggle" onclick="toggleSidebar()">☰ Menu</button>

      <!-- Left-hand menu starts below the header -->
      <div class="side-menu">
         <a href="../index.html">About Me</a>
         <a href="../resume.html">My Resume</a>
         <a href="../blog.html">Blog</a>
         <a href="../portfolio.html" class="active">Cool Things I Have Done</a>
      </div>

      <!-- Main content starts here -->
      <div class="main-content">
         <main>
            <!-- Project overview -->
            <section>
               <h2>Project Overview</h2>
               <p>This SHOULD WORK NOW project focuses on the development of an automated cell culture system that integrates robotics and machine learning to optimize cell growth conditions. The goal was to streamline laboratory research processes, reduce human error, and enhance reproducibility in cell biology experiments.</p>

               <img src="../Images/project1.webp" alt="Automated Cell Culture System" class="project-image">

               <!-- Detailed description -->
               <h2>Detailed Description</h2>
               <p>The automated system employs a robotic arm to handle cell cultures, while machine learning algorithms monitor cell growth and suggest adjustments to factors like temperature, CO2 concentration, and media composition. This innovative approach saves time and ensures consistent results, allowing scientists to focus more on data analysis and less on manual tasks.</p>

               <p>The system is designed to be modular, making it adaptable to different types of cell lines and experimental conditions. By integrating real-time data analysis and control systems, the system can make decisions autonomously, significantly reducing the need for manual intervention.</p>

               <p>Here’s a breakdown of the major components of the project:</p>
               <ul>
                  <li>Robotic handling of cell culture plates and consumables</li>
                  <li>Machine learning algorithms for optimizing growth conditions</li>
                  <li>Automated feedback systems for real-time monitoring</li>
                  <li>Data integration with laboratory information management systems (LIMS)</li>
               </ul>

            <!-- Collapsible code block showing a Git file -->
            <button type="button" class="collapsible">View Code from GitHub</button>
            <div class="collapsible-content">
               <pre><code>
# Example Python Code for Optimizing Cell Growth Conditions

import numpy as np
from sklearn.ensemble import RandomForestRegressor

# Simulated data for cell growth conditions
X = np.array([[37, 5], [36, 5], [37, 6], [38, 5], [36, 4]])  # Temperature, CO2 level
y = np.array([80, 78, 85, 90, 75])  # Cell growth percentages

# Machine learning model to predict optimal conditions
model = RandomForestRegressor()
model.fit(X, y)

# Predicting cell growth for a new condition
new_condition = np.array([[37, 5.5]])
predicted_growth = model.predict(new_condition)
print(f"Predicted cell growth: {predicted_growth[0]:.2f}%")
               </code></pre>
            </div>
         </section>
      </div>

      <footer>
         &copy; 2024 Luca | All rights reserved.
      </footer>

      <script>
         // Script to toggle the collapsible content
         const collapsible = document.querySelector('.collapsible');
         const content = document.querySelector('.collapsible-content');

         collapsible.addEventListener('click', function() {
            this.classList.toggle('active');
            content.style.display = content.style.display === 'block' ? 'none' : 'block';
         });
      </script>

      <script>
         function toggleSidebar() {
            const sidebar = document.querySelector('.side-menu');
            sidebar.classList.toggle('show');
         }
      </script>

   </body>
</html>
